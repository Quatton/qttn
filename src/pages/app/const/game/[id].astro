---
import MonacoEditor from "@/components/const/MonacoEditor.vue";
import RefreshButton from "@/components/const/RefreshButton.vue";
import ShareButton from "@/components/const/ShareButton.vue";
import WordBar from "@/components/const/WordBar.vue";
import { db } from "@/db/drizzle";
import Layout from "@/layouts/Layout.astro";
import type { CompressedWordWithMatch } from "@/lib/const/rules";

const id = Astro.params.id;
if (!id) {
  return Astro.redirect("/game");
}
const game = await db.query.Games.findFirst({
  where: (fields, { eq }) => eq(fields.id, id),
  with: {
    gameToWords: {
      with: {
        word: {
          columns: {
            id: true,
            name: true,
          },
        },
      },
      orderBy: (fields, { asc }) => asc(fields.index),
    },
  },
});
if (!game) {
  return Astro.redirect("/game");
}
const words: CompressedWordWithMatch[] = game.gameToWords.map((g) => ({
  id: g.word.id,
  name: g.word.name,
  match: false,
}));
---

<Layout title="const!">
  <main
    class="mx-auto flex min-h-[100dvh] max-w-6xl items-center justify-center"
  >
    <section
      class="flex w-full max-w-3xl animate-fade flex-col items-center justify-center animate-once"
    >
      <div
        id="photoframe"
        class="w-full space-y-6 bg-base-100 px-4 pb-8 pt-16 @container-normal md:pt-8"
      >
        <WordBar words={words} client:only="vue" />
        <div
          class="mx-auto h-64 w-[min(90%,64rem)] overflow-hidden rounded-xl bg-neutral shadow md:h-80"
        >
          <MonacoEditor client:only="vue" defaultCode={game.content} />
        </div>
      </div>
      <div class="flex gap-4">
        <RefreshButton client:only="vue" />
        <ShareButton client:only="vue" />
      </div>
    </section>
  </main>
</Layout>
