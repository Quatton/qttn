---
import WordBar from "@/components/const/WordBar.vue";
import Layout from "@/layouts/Layout.astro";
import type { GameSession } from "@/lib/const/rules";
import { actions } from "astro:actions";

const cookie = Astro.cookies.get("const:session")?.json();

let gameSession =
  (cookie as GameSession) ??
  ({
    rules: ["useGivenWords"],
    words: [],
  } as GameSession);

if (gameSession.words.length < 10) {
  gameSession.words = await Astro.callAction(
    actions.constAction.words.orThrow,
    {
      max: 10,
    },
  );
}

const words = gameSession.words;
---

<Layout title="const!">
  <main
    class="max-w-full h-screen pt-16 container mx-auto flex justify-center items-center"
  >
    <section class="flex flex-col max-w-3xl gap-8">
      <WordBar words={words} client:load />

      <div class="*:h-96 rounded-xl shadow overflow-clip">
        <div id="monaco__editor"></div>
      </div>
    </section>
  </main>
</Layout>

<script>
  import { shikiToMonaco } from "@shikijs/monaco";
  import * as monaco from "monaco-editor";
  import { createHighlighter } from "shiki";
  import editorWorker from "monaco-editor/esm/vs/editor/editor.worker?worker";

  const highlighter = await createHighlighter({
    themes: ["vitesse-dark"],
    langs: ["markdown"],
  });

  monaco.languages.register({ id: "markdown" });

  shikiToMonaco(highlighter, monaco);

  const options: monaco.editor.IStandaloneEditorConstructionOptions = {
    language: "markdown",
    fontFamily: "Geist Mono",
    fontSize: 18,
    wordBasedSuggestions: "off",
    minimap: { enabled: false },
    lineNumbers: "off",
    padding: { top: 16, bottom: 16 },
    placeholder: "Write your story here...",
    scrollBeyondLastLine: false,
  };

  self.MonacoEnvironment = {
    getWorker(_, label) {
      return new editorWorker();
    },
  };

  const editor = monaco.editor.create(
    document.getElementById("monaco__editor")!,
    options,
  );
  document.addEventListener("astro:page-load", () => {});
</script>
