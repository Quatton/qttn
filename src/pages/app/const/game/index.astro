---
import { type Word } from "@/db/schema";
import Layout from "@/layouts/Layout.astro";
import type { GameSession } from "@/lib/const/rules";
import { Icon } from "astro-icon/components";
import { actions } from "astro:actions";

const cookie = Astro.cookies.get("const:session")?.json();

let gameSession = cookie as GameSession ?? {
  rules: ["useGivenWords"],
  words: [],
} as GameSession;

if (gameSession.words.length < 10) {
  gameSession.words = await Astro.callAction(actions.constAction.words.orThrow, {
      max: 10,
    });
}

const swapOut = Astro.getActionResult(actions.constAction.swapOut);
const definitionResult = Astro.getActionResult(actions.constAction.dictionary);
const dict = definitionResult?.data?.[0];
const words = gameSession.words as Word[];
---

<Layout title="const!">
  <main
    class="h-screen pt-16 container mx-auto flex justify-center items-center"
  >
    <section class="max-w-2xl">
      <div class="flex gap-2 flex-wrap max-w-md justify-center text-xl">
        {
          (swapOut?.data ?? words).map((word, idx) => (
            <div class="border rounded-full flex items-center gap-2 p-2">
              <div class="dropdown">
                <div
                  tabindex="0"
                  class="btn-xs btn btn-outline btn-error btn-circle"
                >
                  <Icon name="heroicons:x-mark" />
                </div>
                <ul
                  tabindex="0"
                  class="dropdown-content menu bg-base-100 rounded-box z-[1] w-52 p-2 shadow"
                >
                  <form method="POST" action={actions.constAction.swapOut}>
                    <input type="hidden" name="wordId" value={word.id} />
                    <li>
                      <button type="submit">Too difficult</button>
                    </li>
                    <li>
                      <button type="submit">Is this a word?</button>
                    </li>
                  </form>
                </ul>
              </div>
              {word.name}
              <form method="POST" action={actions.constAction.dictionary}>
                <input type="hidden" name="word" value={word.name} />
                <button type="submit" class="btn-xs btn btn-outline btn-circle">
                  <Icon name="heroicons:book-open" />
                </button>
              </form>
            </div>
          ))
        }
      </div>
    </section>

    <dialog
      id="definition_modal"
      class="modal"
      transition:name="definition_modal"
      open={!!definitionResult}
      transition:animate="slide"
    >
          <div class="modal-box pt-16">
            <button
              class="btn btn-ghost btn-circle btn-sm text-lg btn-error absolute top-2 left-2"
              aria-label="Close"
              onclick="definition_modal.close()"
            >
              <Icon name="heroicons:x-mark" class="text-error"/>
            </button>
            {
              dict ?
              <h1>{dict?.word}</h1>
              <p>{dict?.phonetic}</p>
              <table class="table">
                <thead>
                  <tr>
                    <th>Part of Speech</th>
                    <th>Definition</th>
                  </tr>
                </thead>
                <tbody>
                  {dict?.meanings.map((meaning) => (
                    <tr>
                      <td>{meaning.partOfSpeech}</td>
                      <td>
                        <ul>
                          {meaning.definitions.map((def, i) => (
                            <>
                            <li class="mb-4">
                              <p>{def.definition}</p>
                              {def.example && <p>Example: {def.example}</p>}
                            </li>
                            {
                            i < meaning.definitions.length - 1 &&
                            <div class="divider"></div>
                            }
                            </>
                          ))}
                        </ul>
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
              :
              <div>
                <h1>Word not found</h1>
              </div>
            }
          </div>
          <form method="dialog" class="modal-backdrop">
            <button>close</button>
          </form>
        </dialog>
  </main>
</Layout>
